// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/courierapi/courier.proto

/*
Package courierapi is a generated protocol buffer package.

It is generated from these files:
	pkg/courierapi/courier.proto

It has these top-level messages:
	GetRequest
	GetResponse
	PutRequest
	PutResponse
*/
package courierapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import api "github.com/drausin/libri/libri/librarian/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	// key is the document key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResponse struct {
	// value is the document value
	Value *api.Document `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetResponse) GetValue() *api.Document {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutRequest struct {
	// key is the document key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// value is the document value
	Value *api.Document `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PutRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PutRequest) GetValue() *api.Document {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutResponse struct {
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*GetRequest)(nil), "courierapi.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "courierapi.GetResponse")
	proto.RegisterType((*PutRequest)(nil), "courierapi.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "courierapi.PutResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Courier service

type CourierClient interface {
	// Put puts a value into the cache and libri network.
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// Get retrieves a value from the cache or libri network, if it exists.
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type courierClient struct {
	cc *grpc.ClientConn
}

func NewCourierClient(cc *grpc.ClientConn) CourierClient {
	return &courierClient{cc}
}

func (c *courierClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := grpc.Invoke(ctx, "/courierapi.Courier/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/courierapi.Courier/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Courier service

type CourierServer interface {
	// Put puts a value into the cache and libri network.
	Put(context.Context, *PutRequest) (*PutResponse, error)
	// Get retrieves a value from the cache or libri network, if it exists.
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterCourierServer(s *grpc.Server, srv CourierServer) {
	s.RegisterService(&_Courier_serviceDesc, srv)
}

func _Courier_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/courierapi.Courier/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Courier_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/courierapi.Courier/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Courier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "courierapi.Courier",
	HandlerType: (*CourierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Courier_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Courier_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/courierapi/courier.proto",
}

func init() { proto.RegisterFile("pkg/courierapi/courier.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x5b, 0x8b, 0x0a, 0xb3, 0x16, 0x24, 0x07, 0x95, 0x22, 0x22, 0xf1, 0xe2, 0x29, 0x0b,
	0xeb, 0xc5, 0x83, 0xb7, 0x0a, 0xbd, 0x96, 0xfd, 0x07, 0xd9, 0xed, 0x50, 0x87, 0xb6, 0x49, 0x4c,
	0x32, 0x82, 0x07, 0xff, 0xbb, 0x6c, 0xa2, 0xa4, 0x2a, 0xf6, 0x12, 0x86, 0xbc, 0x79, 0xdf, 0xf0,
	0x1e, 0x5c, 0xbb, 0xcd, 0xba, 0xee, 0x2d, 0x7b, 0x42, 0xaf, 0x1d, 0x7d, 0x8f, 0xca, 0x79, 0x1b,
	0xad, 0x80, 0xa2, 0xcc, 0x9e, 0xd6, 0x14, 0x5f, 0xb8, 0x53, 0xbd, 0xdd, 0xd5, 0x2b, 0xaf, 0x39,
	0x90, 0xa9, 0xb7, 0xd4, 0x79, 0xda, 0x7b, 0xb5, 0x27, 0x6d, 0xea, 0x81, 0xb3, 0xb2, 0x3d, 0xef,
	0xd0, 0xc4, 0x90, 0x49, 0xf2, 0x06, 0x60, 0x81, 0xb1, 0xc5, 0x57, 0xc6, 0x10, 0xc5, 0x39, 0x4c,
	0x36, 0xf8, 0x7e, 0x35, 0xbe, 0x1d, 0xdf, 0x9f, 0xb5, 0xc3, 0x28, 0x1b, 0xa8, 0x92, 0x1e, 0x9c,
	0x35, 0x01, 0xc5, 0x1d, 0x1c, 0xbf, 0xe9, 0x2d, 0x63, 0x5a, 0xa9, 0x9a, 0xa9, 0xd2, 0x8e, 0xd4,
	0xf3, 0x17, 0xb3, 0xcd, 0x9a, 0x9c, 0x03, 0x2c, 0xf9, 0x7f, 0x66, 0x81, 0x1c, 0x1d, 0x80, 0x4c,
	0xa1, 0x4a, 0x90, 0x7c, 0xb8, 0xf9, 0x80, 0xd3, 0x79, 0xce, 0x2c, 0x1e, 0x61, 0xb2, 0xe4, 0x28,
	0x2e, 0x54, 0x29, 0x41, 0x95, 0x7b, 0xb3, 0xcb, 0x3f, 0xff, 0x19, 0x21, 0x47, 0x83, 0x73, 0x81,
	0xbf, 0x9c, 0x25, 0xfd, 0x4f, 0xe7, 0x5e, 0x6a, 0x39, 0xea, 0x4e, 0x52, 0x5b, 0x0f, 0x9f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x50, 0x0f, 0x63, 0xa4, 0x97, 0x01, 0x00, 0x00,
}
