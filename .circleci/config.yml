version: 2
jobs:
  build:
    docker:
      - image: gcr.io/elixir-core-prod/service-base-build:latest
        user: root
        auth:
          username: _json_key
          password: $GCR_SVC_JSON
    parallelism: 1
    working_directory: /go/src/github.com/elixirhealth/courier
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - arch={{ arch }}-rocksdb=5.8-vendor={{ checksum "Gopkg.lock" }}-v1
            - arch={{ arch }}-rocksdb=5.8
      - run: make get-deps
      - run:
          name: install RocksDB
          command: |
            # hack to make sure RocksDB runs on CircleCI machines
            test -e /usr/local/lib/librocksdb.a && md5sum /usr/local/lib/librocksdb.a
            if [[ $(md5sum /usr/local/lib/librocksdb.a | awk '{print $1}') != "f7d5fdcd6ecfcf56405ff8555d3c9c33" ]]; then
              ./build/install-rocksdb.sh
            fi
      - run:
          name: install gorocksdb
          command: ./build/install-gorocksdb.sh
      - save_cache:
          key: arch={{ arch }}-rocksdb=5.8-vendor={{ checksum "Gopkg.lock" }}-v1
          paths:
            - vendor
            - /usr/local/include/rocksdb
            - /usr/local/lib/librocksdb.a
      - run: make build
      - run: make build-static
      - run: make docker-image
      - run: make test
      - run: make lint
      - run: make acceptance
      - run:
          name: demo
          command: |
            docker login -u _json_key -p "${GCR_SVC_JSON}" gcr.io
            make demo
      - run:
          name: publish docker image
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              docker login -u _json_key -p "${GCR_SVC_JSON}" gcr.io
              COURIER_VERSION=$(./deploy/bin/courier version)
              docker tag gcr.io/elixir-core-prod/courier:snapshot gcr.io/elixir-core-prod/courier:${COURIER_VERSION}
              docker tag gcr.io/elixir-core-prod/courier:snapshot gcr.io/elixir-core-prod/courier:latest
              docker push gcr.io/elixir-core-prod/courier:${COURIER_VERSION}
              docker push gcr.io/elixir-core-prod/courier:latest
            elif [[ "${CIRCLE_BRANCH}" == "develop" ]]; then
              docker login -u _json_key -p "${GCR_SVC_JSON}" gcr.io
              docker push gcr.io/elixir-core-prod/courier:snapshot
            fi
